# web app
upstream failing-app {
        server 0.0.0.0:8732 fail_timeout=0;
}
# redirect all 80 track here
upstream redirect {
        server 0.0.0.0:443 fail_timeout=0;
}

server {
        listen 0.0.0.0:80;

        server_name _;
        access_log /var/log/nginx/failing-app-nginx-access.log;
        error_log /var/log/nginx/failing-app-nginx-error.log;

        location / {

          # pass the host header from the client to help with redirects
          proxy_set_header Host $http_host;
          proxy_pass http://redirect;
        }

}
server {
        listen 0.0.0.0:443;

        server_name _;
        access_log /var/log/nginx/failing-app-nginx-access.log;
        error_log /var/log/nginx/failing-app-nginx-error.log;
        location /
        {
           # requests to the API will be proxy_pass to the backend API infra
           # read this -> http://en.wikipedia.org/wiki/X-Forwarded-For
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

           # pass the host header from the client to help with redirects
           proxy_set_header Host $http_host;

           # stops nginx from doing something silly
           proxy_redirect off;
           # proxy_pass to backend API Django in my case
           proxy_pass http://failing-app;

           # send the IP address and remote server address for security
           proxy_set_header X-Real-IP $remote_addr;

           # Adds headers to the HTTP response
           add_header P3P 'CP="ALL DSP COR PSAa PSDa OUR NOR ONL UNI COM NAV"';

          }
}
